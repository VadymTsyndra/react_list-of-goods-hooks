{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setReverse","NONE","setType","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAA4BD,mBAAShB,EAASkB,MAA9C,mBAAOd,EAAP,KAAiBe,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaJ,EAASU,WAEpCa,QArBe,WACrBJ,EAAQnB,EAASU,WAeb,iCAUA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYlB,IAAaJ,EAASY,SAEpCW,QA3Ba,WACnBJ,EAAQnB,EAASY,SAqBb,4BAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYjB,IAEdkB,QA7CQ,WACdN,GAAW,SAAAO,GAAO,OAAKA,MAuCnB,sBAWGpB,IAAaJ,EAASkB,MAAQb,IAC7B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA3CO,WACjBJ,EAAQnB,EAASkB,MACjBD,GAAW,IAsCH,sBAWN,6BACGf,EACCD,EACA,CAAEG,WAAUC,eACZoB,KAAI,SAAAC,GAAI,OACR,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.169776b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setReverse(current => !current);\n  };\n\n  const sortByAlphabet = () => {\n    setType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setType(SortType.LENGTH);\n  };\n\n  const sortByNone = () => {\n    setType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={sortByNone}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {getReorderedGoods(\n          goodsFromServer,\n          { sortType, isReversed },\n        ).map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}